# -*- coding: utf-8 -*-
"""Atividade 2 Avanti.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wsfkzNWx-8MJuhAGlCtC1gbTSZIWP_m-
"""

!pip install pillow

from google.colab import files
from PIL import Image
import io
import matplotlib.pyplot as plt

# Carrega uma imagem do computador
uploaded = files.upload()
image_name = next(iter(uploaded))

# Abre a imagem usando a biblioteca PIL
image = Image.open(io.BytesIO(uploaded[image_name]))

image_array = np.array(image)

# Exibe a imagem
plt.imshow(image_array)
plt.axis('off')
plt.show()

import cv2
import numpy as np

altura, largura, canais = image_array.shape
tipo_dado = image_array.dtype

# Converte a imagem para cinza
image_cinza = cv2.cvtColor(image_array, cv2.COLOR_BGR2GRAY)
normal_image = image_cinza/255.0

# Calcula os tons de cinza
tom_cinza_min = np.min(normal_image)
tom_cinza_max = np.max(normal_image)
tom_cinza_medio = np.mean(normal_image)

# Imprimindo as informações
print("Altura:", altura)
print("Largura:", largura)
print("Canais de cor:", canais)
print("Tipo de dado:", tipo_dado)
print("Tom de cinza máximo:", tom_cinza_max)
print("Tom de cinza médio:", tom_cinza_medio)
print("Tom de cinza mínimo:", tom_cinza_min)

from scipy.ndimage import median_filter, gaussian_filter

# Aplicar filtro de média
average_filtered = cv2.blur(image_cinza, (5, 5))

# Aplicar filtro de mediana
median_filtered = median_filter(image_cinza, size=5)

# Aplicar filtro gaussiano

gaussian_filtered = gaussian_filter(image_cinza, sigma=1.0)

# Exibir as imagens usando Matplotlib
plt.figure(figsize=(12, 4))

plt.subplot(1, 4, 1)
plt.imshow(image_cinza,cmap='gray')
plt.title('Imagem de Entrada')
plt.axis('off')

plt.subplot(1, 4, 2)
plt.imshow(average_filtered,cmap='gray')
plt.title('Filtro da Média')
plt.axis('off')

plt.subplot(1, 4, 3)
plt.imshow(median_filtered,cmap='gray')
plt.title('Filtro da Mediana')
plt.axis('off')

plt.subplot(1, 4, 4)
plt.imshow(gaussian_filtered,cmap='gray')
plt.title('Filtro Gaussiano')
plt.axis('off')

plt.show()